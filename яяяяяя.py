'''


TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO


Строковый тип данных

    len('Python rocks!')     - Длина строки
    str(17.77)               - Преобразование чисел в строку
    s1 = 'ab' + 'bc'         - Конкатенация строк
    s = 'Hi' * 4             - Результат HiHiHiHi
    'ab' in 'abc'            - Вхождение подстроки (чувствительно к регистру)


    Тройные кавычки для многострочного текста.

    text = \'''Python is an interpreted, high-level, general-purpose programming language.
    Created by Guido van Rossum and first released in 1991, Python design
    philosophy emphasizes code readability with its notable use of significant whitespace.\'''


    Индексация строк

        Положительные индексы	 0	 1	 2	 3	 4	 5
        Строка	                 P	 y	 t	 h	 o	 n
        Отрицательные индексы	-6	-5	-4	-3	-2	-1

        отрицательные индексы строки начинаются с -1

        s[0]    P
        s[-6]	P


    Итерирование строк
        s = 'abcdef'
        for i in range(len(s)):
        print(s[i])


        s = 'abcdef'
        for c in s:         с - переменная, назвали прсосто - первая буква слова char (символ).
            print(c)

        Этот цикл пройдет по строке s, придавая переменной цикла c значение каждого символа (!) в отличие от предыдущего цикла,
        в котором переменная цикла «бегала» по индексам строки.



Срезы строк

    Положительные индексы	    0	1	2	3	4	5	6	7	8	9
    Строка	                    a	b	c	d	e	f	g	h	i	j
    Отрицательные индексы	    -10	-9	-8	-7	-6	-5	-4	-3	-2	-1

    отрицательные индексы строки начинаются с -1

s[x:y:шаг]
    x - включительно,
    y - невключительно
    Если в качестве шага среза указать отрицательное число, то символы будут идти в обратном порядке.

        s[2:5]      от 2 до 5 (cde)
        s[2:]       от 2 до конца (cdefghij)
        s[:7]       от начала до 7 (abcdefg)
        s[:]        возвращает исходную строку.
        s[-9:-4]    (bcdef)
        s[:-1]      от начала до -1 (abcdefghi) , Удалить из строки последний символ

        s[1:7:2]   взяты индексы 1,3,5 (bdf)
        s[::-1]    Если в качестве шага среза указать отрицательное число, то символы будут идти в обратном порядке. (jihgfedcba)


Изменение символа строки по индексу

    В Python строки являются неизменяемыми, то есть мы не можем менять их содержимое с помощью индексатора.
    s[4] = 'X'                  - не сработает
    s = s[:4] + 'X' + s[5:]     - сработает, мы должны создать новую строку


Методы строк:
Они не изменяют исходную строку, создаётся совсем другой объект
    s.capitalize()      -   1-ый символ имеет верхний регистр, а все остальные символы имеют нижний регистр.
    s.swapcase()        -   все символы, имеющие верхний регистр, преобразуются в символы нижнего регистра и наоборот.
    s.title()           -   1-ый символ каждого слова переводится в верхний регистр. Не обрабатывает аббревиатуры и апострофы, после них большая буква
    s.lower()           -   все символы имеют нижний регистр
    s.upper()           -   все символы имеют верхний регистр


'''

s = 'i LEARN Python LAnguaGE'
print(s.swapcase())





























